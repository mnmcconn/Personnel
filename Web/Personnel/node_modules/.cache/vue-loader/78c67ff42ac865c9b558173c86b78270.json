{"remainingRequest":"C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\src\\components\\layouts\\Personnel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\src\\components\\layouts\\Personnel.vue","mtime":1628974651304},{"path":"C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mitchel\\Documents\\GitHub\\Personnel\\Web\\Personnel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport repo from \"@/utils/repo\";\nimport Employee from \"../../models/Employee\";\nimport * as Clone from '@/utils/clone';\nimport swal from \"sweetalert\"\nexport default {\n    name: \"Personnel\",\n    data() {\n        return {\n            isLoading: true,\n            listMode: true,\n\n            roles: [],\n\n            manager: null,\n            managers: [],\n\n            employee: new Employee(),\n            employees: [],\n            selectedRoles: [],\n\n        }\n    },\n    mounted() {\n        this.getManagers();\n        this.getRoles();\n    },\n\n    methods: {\n\n        getManagers() {\n            return repo.employees.listManagers().then(res => {\n                this.managers = res.data.Data;\n                this.managers.sort((a, b) => (a.LastName.toLowerCase() > b.LastName.toLowerCase()) ? 1 : -1)\n                this.getEmployees();\n            }).catch(error => {\n                console.log('error.response', error.response);\n            });\n        },\n\n        getEmployees() {\n\n            if (!this.manager) {\n                return null;\n            }\n\n            return repo.employees.list(this.manager.EmployeeID).then(res => {\n                this.employees = res.data.Data;\n                this.employees.sort((a, b) => (a.LastName.toLowerCase() > b.LastName.toLowerCase()) ? 1 : -1)\n            });\n        },\n\n        getRoles() {\n\n            return repo.roles.list().then(res => {\n                this.roles = res.data.Data;\n            }).catch(error => {\n                console.log('error.response', error.response);\n            });\n        },\n\n        addEmployee() {\n\n            this.employee.Roles = Clone.json(this.selectedRoles);\n\n            if (this.valid()) {\n\n                this.employee.ManagerID = this.manager.EmployeeID;\n                repo.employees.create(this.employee).then(res => {\n                    if (this.handleResponse(res)) {\n                        \n                        swal(\"Success!\", res.data.Message, \"success\");\n                        this.employee = new Employee();\n                        this.selectedRoles = [];\n                        this.getManagers();\n                        this.listMode = !this.listMode;\n                    }\n                }).catch(error => {\n                    swal(\"Failure!\", \"Add Employee Failed\", \"warning\");\n                });                    \n            }\n        },\n\n        handleResponse(res) {\n\n            if (res.data.Success)\n                return true;\n\n            return false;\n        },\n\n        managerChange() {\n            this.getEmployees();\n        },\n      \n        valid() {\n\n            var errors = [];\n\n            if (!this.employee.EmployeeCode) {\n                errors.push('Employee ID is required.');\n            }\n            if (!this.employee.FirstName) {\n                errors.push(\"First Name is required.\");\n            }\n            if (!this.employee.LastName) {\n                errors.push(\"Last Name is required.\");\n            }\n            if (this.selectedRoles.length == 0) {\n                errors.push(\"At least one role is required.\");\n            }\n            if (errors.length > 0) {\n                swal(\"Add Employee Failed!\", errors.join('\\n'), \"warning\");\n                return false;\n            }\n            return true;\n        }\n    }\n};\n",{"version":3,"sources":["Personnel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Personnel.vue","sourceRoot":"src/components/layouts","sourcesContent":["<template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"card\">\r\n            <div class=\"card-heading\">\r\n                <div class=\"row margin-bottom-40\">\r\n                    <div align=\"center\">\r\n                        <div class=\"form-group\" align=\"center\">\r\n                            <h2 v-show=\"!listMode\">Add New Employee</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form class=\"form-horizontal\" role=\"form\">\r\n                    <div class=\"form-group\">\r\n                        <label lead class=\"col-sm-offset-2 col-sm-2 control-label\">Manager:</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <select class=\"form-control\" v-model=\"manager\" @change=\"managerChange()\">\r\n                                <option v-for=\"x in managers\" :key=\"x.EmployeeID\" :value=\"x\">{{x.DisplayName}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div v-if=\"listMode\" class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-offset-2 col-sm-8 table-responsive\">\r\n                        <table class=\"table table-striped table-condensed table-bordered table-hover small\">\r\n                            <thead>\r\n                                <tr class=\"lightgrey\">\r\n                                    <td><b>Employee ID</b></td>\r\n                                    <td><b>Last Name</b></td>\r\n                                    <td><b>First Name</b></td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"e in employees\" :key=\"e.EmployeeID\" :value=\"e\">\r\n                                    <td>{{e.EmployeeCode}}</td>\r\n                                    <td>{{e.LastName}}</td>\r\n                                    <td>{{e.FirstName}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-offset-5 col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-primary\" @click=\"listMode=!listMode\" aria-label=\"Add Employee\">\r\n                                <span class=\"fa fa-add\" aria-hidden=\"true\"> Add Employee</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-else class=\"card-body\">\r\n                <form class=\"form-horizontal\" role=\"form\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-sm-offset-2 col-sm-2 control-label\">Employee ID:</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"employee.EmployeeCode\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-sm-offset-2 col-sm-2 control-label\">First Name:</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"employee.FirstName\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-sm-offset-2 col-sm-2 control-label\">Last Name:</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"employee.LastName\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-sm-offset-2 col-sm-2 control-label\">Roles:</label>\r\n                        <div class=\"col-sm-8\">\r\n                            <select class=\"form-control\" v-model=\"selectedRoles\" multiple>\r\n                                <option v-for=\"r in roles\" v-bind:value=\"r\">\r\n                                    {{ r.Description }}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-offset-5 col-sm-1\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-primary\" @click=\"addEmployee()\">\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-1\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" class=\"btn btn-sm btn-primary\" @click=\"listMode=!listMode; ;\">\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import repo from \"@/utils/repo\";\r\n    import Employee from \"../../models/Employee\";\r\n    import * as Clone from '@/utils/clone';\r\n    import swal from \"sweetalert\"\r\n    export default {\r\n        name: \"Personnel\",\r\n        data() {\r\n            return {\r\n                isLoading: true,\r\n                listMode: true,\r\n\r\n                roles: [],\r\n\r\n                manager: null,\r\n                managers: [],\r\n\r\n                employee: new Employee(),\r\n                employees: [],\r\n                selectedRoles: [],\r\n\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getManagers();\r\n            this.getRoles();\r\n        },\r\n\r\n        methods: {\r\n\r\n            getManagers() {\r\n                return repo.employees.listManagers().then(res => {\r\n                    this.managers = res.data.Data;\r\n                    this.managers.sort((a, b) => (a.LastName.toLowerCase() > b.LastName.toLowerCase()) ? 1 : -1)\r\n                    this.getEmployees();\r\n                }).catch(error => {\r\n                    console.log('error.response', error.response);\r\n                });\r\n            },\r\n\r\n            getEmployees() {\r\n\r\n                if (!this.manager) {\r\n                    return null;\r\n                }\r\n\r\n                return repo.employees.list(this.manager.EmployeeID).then(res => {\r\n                    this.employees = res.data.Data;\r\n                    this.employees.sort((a, b) => (a.LastName.toLowerCase() > b.LastName.toLowerCase()) ? 1 : -1)\r\n                });\r\n            },\r\n\r\n            getRoles() {\r\n\r\n                return repo.roles.list().then(res => {\r\n                    this.roles = res.data.Data;\r\n                }).catch(error => {\r\n                    console.log('error.response', error.response);\r\n                });\r\n            },\r\n\r\n            addEmployee() {\r\n\r\n                this.employee.Roles = Clone.json(this.selectedRoles);\r\n\r\n                if (this.valid()) {\r\n\r\n                    this.employee.ManagerID = this.manager.EmployeeID;\r\n                    repo.employees.create(this.employee).then(res => {\r\n                        if (this.handleResponse(res)) {\r\n                            \r\n                            swal(\"Success!\", res.data.Message, \"success\");\r\n                            this.employee = new Employee();\r\n                            this.selectedRoles = [];\r\n                            this.getManagers();\r\n                            this.listMode = !this.listMode;\r\n                        }\r\n                    }).catch(error => {\r\n                        swal(\"Failure!\", \"Add Employee Failed\", \"warning\");\r\n                    });                    \r\n                }\r\n            },\r\n\r\n            handleResponse(res) {\r\n\r\n                if (res.data.Success)\r\n                    return true;\r\n\r\n                return false;\r\n            },\r\n\r\n            managerChange() {\r\n                this.getEmployees();\r\n            },\r\n          \r\n            valid() {\r\n\r\n                var errors = [];\r\n\r\n                if (!this.employee.EmployeeCode) {\r\n                    errors.push('Employee ID is required.');\r\n                }\r\n                if (!this.employee.FirstName) {\r\n                    errors.push(\"First Name is required.\");\r\n                }\r\n                if (!this.employee.LastName) {\r\n                    errors.push(\"Last Name is required.\");\r\n                }\r\n                if (this.selectedRoles.length == 0) {\r\n                    errors.push(\"At least one role is required.\");\r\n                }\r\n                if (errors.length > 0) {\r\n                    swal(\"Add Employee Failed!\", errors.join('\\n'), \"warning\");\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n"]}]}